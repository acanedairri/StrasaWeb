package org.strasa.middleware.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.strasa.middleware.model.Crosstype;
import org.strasa.middleware.model.CrosstypeExample;

public interface CrosstypeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crosstype
     *
     * @mbggenerated Wed Oct 01 09:17:16 SGT 2014
     */
    @SelectProvider(type=CrosstypeSqlProvider.class, method="countByExample")
    int countByExample(CrosstypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crosstype
     *
     * @mbggenerated Wed Oct 01 09:17:16 SGT 2014
     */
    @DeleteProvider(type=CrosstypeSqlProvider.class, method="deleteByExample")
    int deleteByExample(CrosstypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crosstype
     *
     * @mbggenerated Wed Oct 01 09:17:16 SGT 2014
     */
    @Insert({
        "insert into crosstype (crosstype)",
        "values (#{crosstype,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(Crosstype record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crosstype
     *
     * @mbggenerated Wed Oct 01 09:17:16 SGT 2014
     */
    @InsertProvider(type=CrosstypeSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(Crosstype record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crosstype
     *
     * @mbggenerated Wed Oct 01 09:17:16 SGT 2014
     */
    @SelectProvider(type=CrosstypeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER),
        @Result(column="crosstype", property="crosstype", jdbcType=JdbcType.VARCHAR)
    })
    List<Crosstype> selectByExample(CrosstypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crosstype
     *
     * @mbggenerated Wed Oct 01 09:17:16 SGT 2014
     */
    @UpdateProvider(type=CrosstypeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Crosstype record, @Param("example") CrosstypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crosstype
     *
     * @mbggenerated Wed Oct 01 09:17:16 SGT 2014
     */
    @UpdateProvider(type=CrosstypeSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Crosstype record, @Param("example") CrosstypeExample example);

   
    @Delete({ "delete from crosstype", "where id = #{id,jdbcType=INTEGER}" })
	void deleteByPrimaryKey(Integer id);

    @Update({ "update crosstype", "set crosstype = #{crosstype,jdbcType=VARCHAR}",
	"where id = #{id,jdbcType=INTEGER}" })
	void updateByPrimaryKey(Crosstype value);
}